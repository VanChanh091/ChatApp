{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\20045291\\\\CNM\\\\BTL\\\\realtime-chat-app-main\\\\FrontEnd\\\\screens\\\\ListGroupScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport GroupChat from '../components/GroupChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListGroupScreen(_ref) {\n  var _this = this;\n  var route = _ref.route;\n  var userId = route.params.userId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    groups = _useState2[0],\n    setGroups = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    acceptedFriends = _useState4[0],\n    setAcceptedFriends = _useState4[1];\n  useEffect(function () {\n    fetchGroups();\n  }, []);\n  var fetchGroups = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`http://192.168.1.8:8000/groups/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch groups');\n        }\n        var data = yield response.json();\n        setGroups(data);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n      }\n    });\n    return function fetchGroups() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(SafeAreaView, {\n    children: _jsxDEV(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: _jsxDEV(Pressable, {\n        children: groups.map(function (item, index) {\n          return _jsxDEV(GroupChat, {\n            item: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","SafeAreaView","Pressable","ScrollView","GroupChat","jsxDEV","_jsxDEV","ListGroupScreen","_ref","_this","route","userId","params","_useState","_useState2","_slicedToArray","groups","setGroups","_useState3","_useState4","acceptedFriends","setAcceptedFriends","fetchGroups","_ref2","_asyncToGenerator","response","fetch","ok","Error","data","json","error","console","apply","arguments","children","showsVerticalScrollIndicator","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/20045291/CNM/BTL/realtime-chat-app-main/FrontEnd/screens/ListGroupScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, SafeAreaView, Pressable, ScrollView } from 'react-native';\nimport GroupChat from '../components/GroupChat';\n\nexport default function ListGroupScreen({route}) {\n  const { userId } = route.params;\n  \n  const [groups, setGroups] = useState([]);\n  const [acceptedFriends, setAcceptedFriends] = useState([]);\n  useEffect(() => {\n    // Fetch the groups for the logged-in user\n    fetchGroups();\n  }, []);\n\n\n\n  const fetchGroups = async () => {\n    try {\n      // Replace 'userId' with the actual ID of the logged-in user\n      // const userId = userId; // You should retrieve the actual userId from your authentication system\n      const response = await fetch(`http://192.168.1.8:8000/groups/${userId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch groups');\n      }\n      const data = await response.json();\n      setGroups(data);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n      // Handle error\n    }\n  };\n\n  return (\n    <SafeAreaView>\n      \n      \n      \n\n      <ScrollView showsVerticalScrollIndicator={false}>\n          <Pressable>\n            {\n              groups.map((item,index) => (\n                <GroupChat key={index} item={item}/>\n                \n                \n              ))\n              \n            }\n            \n          </Pressable>\n      </ScrollView>\n      \n    </SafeAreaView>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAAU;EAAA,IAAAC,KAAA;EAAA,IAARC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC5C,IAAQC,MAAM,GAAKD,KAAK,CAACE,MAAM,CAAvBD,MAAM;EAEd,IAAAE,SAAA,GAA4BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA8CtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1CtB,SAAS,CAAC,YAAM;IAEdyB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAIN,IAAMA,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QAGF,IAAMC,QAAQ,SAASC,KAAK,CAAE,kCAAiCf,MAAO,EAAC,CAAC;QACxE,IAAI,CAACc,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,IAAMC,IAAI,SAASJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,SAAS,CAACY,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAEhD;IACF,CAAC;IAAA,gBAdKT,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAchB;EAED,OACE5B,OAAA,CAACL,YAAY;IAAAkC,QAAA,EAKX7B,OAAA,CAACH,UAAU;MAACiC,4BAA4B,EAAE,KAAM;MAAAD,QAAA,EAC5C7B,OAAA,CAACJ,SAAS;QAAAiC,QAAA,EAENnB,MAAM,CAACqB,GAAG,CAAC,UAACC,IAAI,EAACC,KAAK;UAAA,OACpBjC,OAAA,CAACF,SAAS;YAAakC,IAAI,EAAEA;UAAK,GAAlBC,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAlC,KAAc,CAAC;QAAA,CAGrC;MAAC;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}