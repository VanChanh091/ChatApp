{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\20045291\\\\CNM\\\\BTL\\\\realtime-chat-app-main\\\\FrontEnd\\\\screens\\\\ShareMessageScreen.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShareMessageScreen(_ref) {\n  var route = _ref.route;\n  var messageId = route.params.messageId;\n  console.log(\"messageId :\", messageId);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    senderId = _useState2[0],\n    setSenderId = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    receiverId = _useState4[0],\n    setReceiverId = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    messageType = _useState8[0],\n    setMessageType = _useState8[1];\n  useEffect(function () {\n    var fetchMessage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(`http://localhost:8000/messages/${messageId}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(messageId)\n          });\n          var responseData = yield response.json();\n          setSenderId(responseData[0].senderId);\n          setMessage(responseData[0].message);\n          setMessageType(responseData[0].messageType);\n          console.log(\"message share:\", message);\n          console.log(\"senderId :\", senderId);\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function fetchMessage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchMessage();\n  }, [senderId, message, messageType]);\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      children: \"ShareMessageScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      children: senderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      children: messageType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ShareMessageScreen","_ref","route","messageId","params","console","log","_useState","_useState2","_slicedToArray","senderId","setSenderId","_useState3","_useState4","receiverId","setReceiverId","_useState5","_useState6","message","setMessage","_useState7","_useState8","messageType","setMessageType","fetchMessage","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","responseData","json","error","apply","arguments","View","children","Text","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/20045291/CNM/BTL/realtime-chat-app-main/FrontEnd/screens/ShareMessageScreen.js"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useEffect, useState } from 'react'\n\nexport default function ShareMessageScreen({route}) {\n    const { messageId } = route.params;\n    console.log(\"messageId :\",messageId);\n\n    const [senderId, setSenderId] = useState('');\n    const [receiverId, setReceiverId] = useState('');\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('');\n\n    \n   useEffect(() => {\n    const fetchMessage = async () => {\n        try {\n            const response = await fetch(`http://localhost:8000/messages/${messageId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(messageId)\n            });\n            const responseData = await response.json();\n            \n            setSenderId(responseData[0].senderId);\n            setMessage(responseData[0].message);\n            setMessageType(responseData[0].messageType);\n            console.log(\"message share:\",message);\n            \n            console.log(\"senderId :\",senderId);\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n    fetchMessage();\n   }, [senderId, message, messageType]);\n\n   \n\n  return (\n    <View>\n      <Text>ShareMessageScreen</Text>\n      <Text>{message}</Text>\n      <Text>{senderId}</Text>\n        <Text>{messageType}</Text>\n        \n    </View>\n  )\n}"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,kBAAkBA,CAAAC,IAAA,EAAU;EAAA,IAARC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC7C,IAAQC,SAAS,GAAKD,KAAK,CAACE,MAAM,CAA1BD,SAAS;EACjBE,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,SAAS,CAAC;EAEpC,IAAAI,SAAA,GAAgCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAA8BnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAsCvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAGnCzB,SAAS,CAAC,YAAM;IACf,IAAM4B,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC7B,IAAI;UACA,IAAMC,QAAQ,SAASC,KAAK,CAAE,kCAAiCzB,SAAU,EAAC,EAAE;YACxE0B,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC9B,SAAS;UAClC,CAAC,CAAC;UACF,IAAM+B,YAAY,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAE1CxB,WAAW,CAACuB,YAAY,CAAC,CAAC,CAAC,CAACxB,QAAQ,CAAC;UACrCS,UAAU,CAACe,YAAY,CAAC,CAAC,CAAC,CAAChB,OAAO,CAAC;UACnCK,cAAc,CAACW,YAAY,CAAC,CAAC,CAAC,CAACZ,WAAW,CAAC;UAC3CjB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACY,OAAO,CAAC;UAErCb,OAAO,CAACC,GAAG,CAAC,YAAY,EAACI,QAAQ,CAAC;QAEtC,CAAC,CAAC,OAAO0B,KAAK,EAAE;UACZ/B,OAAO,CAACC,GAAG,CAAC8B,KAAK,CAAC;QACtB;MACJ,CAAC;MAAA,gBArBKZ,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;IAAA,GAqBjB;IACDd,YAAY,CAAC,CAAC;EACf,CAAC,EAAE,CAACd,QAAQ,EAAEQ,OAAO,EAAEI,WAAW,CAAC,CAAC;EAIrC,OACEvB,OAAA,CAACwC,IAAI;IAAAC,QAAA,GACHzC,OAAA,CAAC0C,IAAI;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC/B9C,OAAA,CAAC0C,IAAI;MAAAD,QAAA,EAAEtB;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACtB9C,OAAA,CAAC0C,IAAI;MAAAD,QAAA,EAAE9B;IAAQ;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACrB9C,OAAA,CAAC0C,IAAI;MAAAD,QAAA,EAAElB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}