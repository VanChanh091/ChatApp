{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"emoji\", \"colSize\"],\n  _excluded2 = [\"theme\", \"columns\", \"placeholder\", \"showHistory\", \"showSearchBar\", \"showSectionTitles\", \"showTabs\"];\nvar _jsxFileName = \"D:\\\\20045291\\\\CNM\\\\BTL\\\\realtime-chat-app-main\\\\FrontEnd\\\\node_modules\\\\react-native-emoji-selector\\\\index.js\",\n  _this = this;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport emoji from \"emoji-datasource\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\nvar charFromUtf16 = function charFromUtf16(utf16) {\n  return String.fromCodePoint.apply(String, _toConsumableArray(utf16.split(\"-\").map(function (u) {\n    return \"0x\" + u;\n  })));\n};\nexport var charFromEmojiObject = function charFromEmojiObject(obj) {\n  return charFromUtf16(obj.unified);\n};\nvar filteredEmojis = emoji.filter(function (e) {\n  return !e[\"obsoleted_by\"];\n});\nvar emojiByCategory = function emojiByCategory(category) {\n  return filteredEmojis.filter(function (e) {\n    return e.category === category;\n  });\n};\nvar sortEmoji = function sortEmoji(list) {\n  return list.sort(function (a, b) {\n    return a.sort_order - b.sort_order;\n  });\n};\nvar categoryKeys = Object.keys(Categories);\nvar TabBar = function TabBar(_ref) {\n  var theme = _ref.theme,\n    activeCategory = _ref.activeCategory,\n    _onPress = _ref.onPress,\n    width = _ref.width;\n  var tabSize = width / categoryKeys.length;\n  return categoryKeys.map(function (c) {\n    var category = Categories[c];\n    if (c !== \"all\") return _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        return _onPress(category);\n      },\n      style: {\n        flex: 1,\n        height: tabSize,\n        borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n        borderBottomWidth: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          textAlign: \"center\",\n          paddingBottom: 8,\n          fontSize: tabSize - 24\n        },\n        children: category.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this)\n    }, category.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, _this);\n  });\n};\nvar EmojiCell = function EmojiCell(_ref2) {\n  var emoji = _ref2.emoji,\n    colSize = _ref2.colSize,\n    other = _objectWithoutProperties(_ref2, _excluded);\n  return _jsxDEV(TouchableOpacity, _objectSpread(_objectSpread({\n    activeOpacity: 0.5,\n    style: {\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, other), {}, {\n    children: _jsxDEV(Text, {\n      style: {\n        color: \"#FFFFFF\",\n        fontSize: colSize - 12\n      },\n      children: charFromEmojiObject(emoji)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, _this);\n};\nvar storage_key = \"@react-native-emoji-selector:HISTORY\";\nvar EmojiSelector = function (_Component) {\n  _inherits(EmojiSelector, _Component);\n  var _super = _createSuper(EmojiSelector);\n  function EmojiSelector() {\n    var _this2;\n    _classCallCheck(this, EmojiSelector);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      searchQuery: \"\",\n      category: Categories.people,\n      isReady: false,\n      history: [],\n      emojiList: null,\n      colSize: 0,\n      width: 0\n    };\n    _this2.handleTabSelect = function (category) {\n      if (_this2.state.isReady) {\n        if (_this2.scrollview) _this2.scrollview.scrollToOffset({\n          x: 0,\n          y: 0,\n          animated: false\n        });\n        _this2.setState({\n          searchQuery: \"\",\n          category: category\n        });\n      }\n    };\n    _this2.handleEmojiSelect = function (emoji) {\n      if (_this2.props.showHistory) {\n        _this2.addToHistoryAsync(emoji);\n      }\n      _this2.props.onEmojiSelected(charFromEmojiObject(emoji));\n    };\n    _this2.handleSearch = function (searchQuery) {\n      _this2.setState({\n        searchQuery: searchQuery\n      });\n    };\n    _this2.addToHistoryAsync = function () {\n      var _ref3 = _asyncToGenerator(function* (emoji) {\n        var history = yield AsyncStorage.getItem(storage_key);\n        var value = [];\n        if (!history) {\n          var record = Object.assign({}, emoji, {\n            count: 1\n          });\n          value.push(record);\n        } else {\n          var json = JSON.parse(history);\n          if (json.filter(function (r) {\n            return r.unified === emoji.unified;\n          }).length > 0) {\n            value = json;\n          } else {\n            var _record = Object.assign({}, emoji, {\n              count: 1\n            });\n            value = [_record].concat(_toConsumableArray(json));\n          }\n        }\n        AsyncStorage.setItem(storage_key, JSON.stringify(value));\n        _this2.setState({\n          history: value\n        });\n      });\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this2.loadHistoryAsync = _asyncToGenerator(function* () {\n      var result = yield AsyncStorage.getItem(storage_key);\n      if (result) {\n        var history = JSON.parse(result);\n        _this2.setState({\n          history: history\n        });\n      }\n    });\n    _this2.renderEmojiCell = function (_ref5) {\n      var item = _ref5.item;\n      return _jsxDEV(EmojiCell, {\n        emoji: item.emoji,\n        onPress: function onPress() {\n          return _this2.handleEmojiSelect(item.emoji);\n        },\n        colSize: _this2.state.colSize\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, _assertThisInitialized(_this2));\n    };\n    _this2.handleLayout = function (_ref6) {\n      var layout = _ref6.nativeEvent.layout;\n      _this2.setState({\n        width: layout.width\n      }, function () {\n        _this2.prerenderEmojis(function () {\n          _this2.setState({\n            isReady: true\n          });\n        });\n      });\n    };\n    return _this2;\n  }\n  _createClass(EmojiSelector, [{\n    key: \"returnSectionData\",\n    value: function returnSectionData() {\n      var _this3 = this;\n      var _this$state = this.state,\n        history = _this$state.history,\n        emojiList = _this$state.emojiList,\n        searchQuery = _this$state.searchQuery,\n        category = _this$state.category;\n      var emojiData = function () {\n        if (category === Categories.all && searchQuery === \"\") {\n          var largeList = [];\n          categoryKeys.forEach(function (c) {\n            var name = Categories[c].name;\n            var list = name === Categories.history.name ? history : emojiList[name];\n            if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n          });\n          return largeList.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        } else {\n          var list;\n          var hasSearchQuery = searchQuery !== \"\";\n          var name = category.name;\n          if (hasSearchQuery) {\n            var filtered = emoji.filter(function (e) {\n              var display = false;\n              e.short_names.forEach(function (name) {\n                if (name.includes(searchQuery.toLowerCase())) display = true;\n              });\n              return display;\n            });\n            list = sortEmoji(filtered);\n          } else if (name === Categories.history.name) {\n            list = history;\n          } else {\n            list = emojiList[name];\n          }\n          return list.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        }\n      }();\n      return this.props.shouldInclude ? emojiData.filter(function (e) {\n        return _this3.props.shouldInclude(e.emoji);\n      }) : emojiData;\n    }\n  }, {\n    key: \"prerenderEmojis\",\n    value: function prerenderEmojis(callback) {\n      var emojiList = {};\n      categoryKeys.forEach(function (c) {\n        var name = Categories[c].name;\n        emojiList[name] = sortEmoji(emojiByCategory(name));\n      });\n      this.setState({\n        emojiList: emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      }, callback);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        category = _this$props.category,\n        showHistory = _this$props.showHistory;\n      this.setState({\n        category: category\n      });\n      if (showHistory) {\n        this.loadHistoryAsync();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props2 = this.props,\n        theme = _this$props2.theme,\n        columns = _this$props2.columns,\n        placeholder = _this$props2.placeholder,\n        showHistory = _this$props2.showHistory,\n        showSearchBar = _this$props2.showSearchBar,\n        showSectionTitles = _this$props2.showSectionTitles,\n        showTabs = _this$props2.showTabs,\n        other = _objectWithoutProperties(_this$props2, _excluded2);\n      var _this$state2 = this.state,\n        category = _this$state2.category,\n        colSize = _this$state2.colSize,\n        isReady = _this$state2.isReady,\n        searchQuery = _this$state2.searchQuery;\n      var Searchbar = _jsxDEV(View, {\n        style: styles.searchbar_container,\n        children: _jsxDEV(TextInput, {\n          style: styles.search,\n          placeholder: placeholder,\n          clearButtonMode: \"always\",\n          returnKeyType: \"done\",\n          autoCorrect: false,\n          underlineColorAndroid: theme,\n          value: searchQuery,\n          onChangeText: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }, this);\n      var title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n      return _jsxDEV(View, _objectSpread(_objectSpread({\n        style: styles.frame\n      }, other), {}, {\n        onLayout: this.handleLayout,\n        children: [_jsxDEV(View, {\n          style: styles.tabBar,\n          children: showTabs && _jsxDEV(TabBar, {\n            activeCategory: category,\n            onPress: this.handleTabSelect,\n            theme: theme,\n            width: this.state.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: {\n            flex: 1\n          },\n          children: [showSearchBar && Searchbar, isReady ? _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(View, {\n              style: styles.container,\n              children: [showSectionTitles && _jsxDEV(Text, {\n                style: styles.sectionHeader,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), _jsxDEV(FlatList, {\n                style: styles.scrollview,\n                contentContainerStyle: {\n                  paddingBottom: colSize\n                },\n                data: this.returnSectionData(),\n                renderItem: this.renderEmojiCell,\n                horizontal: false,\n                numColumns: columns,\n                keyboardShouldPersistTaps: \"always\",\n                ref: function ref(scrollview) {\n                  return _this4.scrollview = scrollview;\n                },\n                removeClippedSubviews: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this) : _jsxDEV(View, _objectSpread(_objectSpread({\n            style: styles.loader\n          }, other), {}, {\n            children: _jsxDEV(ActivityIndicator, {\n              size: \"large\",\n              color: Platform.OS === \"android\" ? theme : \"#000000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return EmojiSelector;\n}(Component);\nexport { EmojiSelector as default };\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\nvar styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: _objectSpread(_objectSpread({}, Platform.select({\n    ios: {\n      height: 36,\n      paddingLeft: 8,\n      borderRadius: 10,\n      backgroundColor: \"#E5E8E9\"\n    }\n  })), {}, {\n    margin: 8\n  }),\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","TouchableOpacity","TextInput","Platform","ActivityIndicator","AsyncStorage","FlatList","emoji","jsxDEV","_jsxDEV","Categories","all","symbol","name","history","emotion","people","nature","food","activities","places","objects","symbols","flags","charFromUtf16","utf16","String","fromCodePoint","apply","_toConsumableArray","split","map","u","charFromEmojiObject","obj","unified","filteredEmojis","filter","e","emojiByCategory","category","sortEmoji","list","sort","a","b","sort_order","categoryKeys","Object","keys","TabBar","_ref","theme","activeCategory","onPress","width","tabSize","length","c","style","flex","height","borderColor","borderBottomWidth","alignItems","justifyContent","children","textAlign","paddingBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_this","EmojiCell","_ref2","colSize","other","_objectWithoutProperties","_excluded","_objectSpread","activeOpacity","color","storage_key","EmojiSelector","_Component","_inherits","_super","_createSuper","_this2","_classCallCheck","_len","arguments","args","Array","_key","call","concat","state","searchQuery","isReady","emojiList","handleTabSelect","scrollview","scrollToOffset","x","y","animated","setState","handleEmojiSelect","props","showHistory","addToHistoryAsync","onEmojiSelected","handleSearch","_ref3","_asyncToGenerator","getItem","value","record","assign","count","push","json","JSON","parse","r","setItem","stringify","_x","loadHistoryAsync","result","renderEmojiCell","_ref5","item","key","_assertThisInitialized","handleLayout","_ref6","layout","nativeEvent","prerenderEmojis","_createClass","returnSectionData","_this3","_this$state","emojiData","largeList","forEach","hasSearchQuery","filtered","display","short_names","includes","toLowerCase","shouldInclude","callback","Math","floor","columns","componentDidMount","_this$props","render","_this4","_this$props2","placeholder","showSearchBar","showSectionTitles","showTabs","_excluded2","_this$state2","Searchbar","styles","searchbar_container","search","clearButtonMode","returnKeyType","autoCorrect","underlineColorAndroid","onChangeText","title","frame","onLayout","tabBar","container","sectionHeader","contentContainerStyle","data","renderItem","horizontal","numColumns","keyboardShouldPersistTaps","ref","removeClippedSubviews","loader","size","OS","default","defaultProps","create","flexDirection","zIndex","backgroundColor","select","ios","paddingLeft","borderRadius","margin","flexWrap"],"sources":["D:/20045291/CNM/BTL/realtime-chat-app-main/FrontEnd/node_modules/react-native-emoji-selector/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ActivityIndicator,\n  AsyncStorage,\n  FlatList\n} from \"react-native\";\nimport emoji from \"emoji-datasource\";\n\nexport const Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\n\nconst charFromUtf16 = utf16 =>\n  String.fromCodePoint(...utf16.split(\"-\").map(u => \"0x\" + u));\nexport const charFromEmojiObject = obj => charFromUtf16(obj.unified);\nconst filteredEmojis = emoji.filter(e => !e[\"obsoleted_by\"]);\nconst emojiByCategory = category =>\n  filteredEmojis.filter(e => e.category === category);\nconst sortEmoji = list => list.sort((a, b) => a.sort_order - b.sort_order);\nconst categoryKeys = Object.keys(Categories);\n\nconst TabBar = ({ theme, activeCategory, onPress, width }) => {\n  const tabSize = width / categoryKeys.length;\n\n  return categoryKeys.map(c => {\n    const category = Categories[c];\n    if (c !== \"all\")\n      return (\n        <TouchableOpacity\n          key={category.name}\n          onPress={() => onPress(category)}\n          style={{\n            flex: 1,\n            height: tabSize,\n            borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n            borderBottomWidth: 2,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Text\n            style={{\n              textAlign: \"center\",\n              paddingBottom: 8,\n              fontSize: tabSize - 24\n            }}\n          >\n            {category.symbol}\n          </Text>\n        </TouchableOpacity>\n      );\n  });\n};\n\nconst EmojiCell = ({ emoji, colSize, ...other }) => (\n  <TouchableOpacity\n    activeOpacity={0.5}\n    style={{\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n    {...other}\n  >\n    <Text style={{ color: \"#FFFFFF\", fontSize: colSize - 12 }}>\n      {charFromEmojiObject(emoji)}\n    </Text>\n  </TouchableOpacity>\n);\n\nconst storage_key = \"@react-native-emoji-selector:HISTORY\";\nexport default class EmojiSelector extends Component {\n  state = {\n    searchQuery: \"\",\n    category: Categories.people,\n    isReady: false,\n    history: [],\n    emojiList: null,\n    colSize: 0,\n    width: 0\n  };\n\n  //\n  //  HANDLER METHODS\n  //\n  handleTabSelect = category => {\n    if (this.state.isReady) {\n      if (this.scrollview)\n        this.scrollview.scrollToOffset({ x: 0, y: 0, animated: false });\n      this.setState({\n        searchQuery: \"\",\n        category\n      });\n    }\n  };\n\n  handleEmojiSelect = emoji => {\n    if (this.props.showHistory) {\n      this.addToHistoryAsync(emoji);\n    }\n    this.props.onEmojiSelected(charFromEmojiObject(emoji));\n  };\n\n  handleSearch = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  addToHistoryAsync = async emoji => {\n    let history = await AsyncStorage.getItem(storage_key);\n\n    let value = [];\n    if (!history) {\n      // no history\n      let record = Object.assign({}, emoji, { count: 1 });\n      value.push(record);\n    } else {\n      let json = JSON.parse(history);\n      if (json.filter(r => r.unified === emoji.unified).length > 0) {\n        value = json;\n      } else {\n        let record = Object.assign({}, emoji, { count: 1 });\n        value = [record, ...json];\n      }\n    }\n\n    AsyncStorage.setItem(storage_key, JSON.stringify(value));\n    this.setState({\n      history: value\n    });\n  };\n\n  loadHistoryAsync = async () => {\n    let result = await AsyncStorage.getItem(storage_key);\n    if (result) {\n      let history = JSON.parse(result);\n      this.setState({ history });\n    }\n  };\n\n  //\n  //  RENDER METHODS\n  //\n  renderEmojiCell = ({ item }) => (\n    <EmojiCell\n      key={item.key}\n      emoji={item.emoji}\n      onPress={() => this.handleEmojiSelect(item.emoji)}\n      colSize={this.state.colSize}\n    />\n  );\n\n  returnSectionData() {\n    const { history, emojiList, searchQuery, category } = this.state;\n    let emojiData = (function() {\n        if (category === Categories.all && searchQuery === \"\") {\n        //TODO: OPTIMIZE THIS\n        let largeList = [];\n        categoryKeys.forEach(c => {\n          const name = Categories[c].name;\n          const list =\n            name === Categories.history.name ? history : emojiList[name];\n          if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n        });\n\n        return largeList.map(emoji => ({ key: emoji.unified, emoji }));\n      } else {\n        let list;\n        const hasSearchQuery = searchQuery !== \"\";\n        const name = category.name;\n        if (hasSearchQuery) {\n          const filtered = emoji.filter(e => {\n            let display = false;\n            e.short_names.forEach(name => {\n              if (name.includes(searchQuery.toLowerCase())) display = true;\n            });\n            return display;\n          });\n          list = sortEmoji(filtered);\n        } else if (name === Categories.history.name) {\n          list = history;\n        } else {\n          list = emojiList[name];\n        }\n        return list.map(emoji => ({ key: emoji.unified, emoji }));\n      }\n    })()\n    return this.props.shouldInclude ? emojiData.filter(e => this.props.shouldInclude(e.emoji)) : emojiData\n  }\n\n  prerenderEmojis(callback) {\n    let emojiList = {};\n    categoryKeys.forEach(c => {\n      let name = Categories[c].name;\n      emojiList[name] = sortEmoji(emojiByCategory(name));\n    });\n\n    this.setState(\n      {\n        emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      },\n      callback\n    );\n  }\n\n  handleLayout = ({ nativeEvent: { layout } }) => {\n    this.setState({ width: layout.width }, () => {\n      this.prerenderEmojis(() => {\n        this.setState({ isReady: true });\n      });\n    });\n  };\n\n  //\n  //  LIFECYCLE METHODS\n  //\n  componentDidMount() {\n    const { category, showHistory } = this.props;\n    this.setState({ category });\n\n    if (showHistory) {\n      this.loadHistoryAsync();\n    }\n  }\n\n  render() {\n    const {\n      theme,\n      columns,\n      placeholder,\n      showHistory,\n      showSearchBar,\n      showSectionTitles,\n      showTabs,\n      ...other\n    } = this.props;\n\n    const { category, colSize, isReady, searchQuery } = this.state;\n\n    const Searchbar = (\n      <View style={styles.searchbar_container}>\n        <TextInput\n          style={styles.search}\n          placeholder={placeholder}\n          clearButtonMode=\"always\"\n          returnKeyType=\"done\"\n          autoCorrect={false}\n          underlineColorAndroid={theme}\n          value={searchQuery}\n          onChangeText={this.handleSearch}\n        />\n      </View>\n    );\n\n    const title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n\n    return (\n      <View style={styles.frame} {...other} onLayout={this.handleLayout}>\n        <View style={styles.tabBar}>\n          {showTabs && (\n            <TabBar\n              activeCategory={category}\n              onPress={this.handleTabSelect}\n              theme={theme}\n              width={this.state.width}\n            />\n          )}\n        </View>\n        <View style={{ flex: 1 }}>\n          {showSearchBar && Searchbar}\n          {isReady ? (\n            <View style={{ flex: 1 }}>\n              <View style={styles.container}>\n                {showSectionTitles && (\n                  <Text style={styles.sectionHeader}>{title}</Text>\n                )}\n                <FlatList\n                  style={styles.scrollview}\n                  contentContainerStyle={{ paddingBottom: colSize }}\n                  data={this.returnSectionData()}\n                  renderItem={this.renderEmojiCell}\n                  horizontal={false}\n                  numColumns={columns}\n                  keyboardShouldPersistTaps={\"always\"}\n                  ref={scrollview => (this.scrollview = scrollview)}\n                  removeClippedSubviews\n                />\n              </View>\n            </View>\n          ) : (\n            <View style={styles.loader} {...other}>\n              <ActivityIndicator\n                size={\"large\"}\n                color={Platform.OS === \"android\" ? theme : \"#000000\"}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\n\nconst styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: {\n    ...Platform.select({\n      ios: {\n        height: 36,\n        paddingLeft: 8,\n        borderRadius: 10,\n        backgroundColor: \"#E5E8E9\"\n      }\n    }),\n    margin: 8\n  },\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}