{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\20045291\\\\CNM\\\\BTL\\\\realtime-chat-app-main\\\\FrontEnd\\\\screens\\\\CreateGroupScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CheckBox from 'expo-checkbox';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateGroup(_ref) {\n  var _this = this;\n  var route = _ref.route;\n  var _route$params = route.params,\n    users = _route$params.users,\n    userId = _route$params.userId;\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    groupName = _useState2[0],\n    setGroupName = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedUsers = _useState4[0],\n    setSelectedUsers = _useState4[1];\n  var toggleSelectUser = function toggleSelectUser(userId) {\n    setSelectedUsers(function (prevSelectedUsers) {\n      if (prevSelectedUsers.includes(userId)) {\n        return prevSelectedUsers.filter(function (id) {\n          return id !== userId;\n        });\n      } else {\n        return [].concat(_toConsumableArray(prevSelectedUsers), [userId]);\n      }\n    });\n  };\n  var handleCreateGroup = function handleCreateGroup() {\n    var usersWithSelf = [].concat(_toConsumableArray(selectedUsers), [userId]);\n    if (!groupName) {\n      Alert.alert(\"Error\", \"Please enter a group name.\");\n      return;\n    }\n    if (usersWithSelf.length < 2) {\n      Alert.alert(\"Error\", \"You need to select at least two users to create a group.\");\n      return;\n    }\n    console.log(\"Group Name:\", groupName);\n    console.log(\"Selected Users:\", usersWithSelf);\n    var requestData = {\n      groupName: groupName,\n      selectedUsers: usersWithSelf,\n      leader: userId\n    };\n    try {\n      fetch(\"http://localhost:8000/create-group\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      Alert.alert(\"Success\", \"Group created successfully.\");\n    } catch (error) {\n      console.log(\"Error creating group:\", error);\n      alert(\"Error creating group. Please try again.\");\n    }\n    navigation.navigate(\"Home\");\n  };\n  return _jsxDEV(SafeAreaView, {\n    children: [_jsxDEV(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(TextInput, {\n        value: groupName,\n        onChangeText: function onChangeText(text) {\n          return setGroupName(text);\n        },\n        style: {\n          fontSize: groupName ? 18 : 18,\n          borderBottomColor: \"gray\",\n          borderBottomWidth: 1,\n          marginVertical: 10,\n          width: \"95%\",\n          height: 50\n        },\n        placeholder: \"Enter your group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      children: users.map(function (user) {\n        return _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsxDEV(CheckBox, {\n            value: selectedUsers.includes(user._id),\n            onValueChange: function onValueChange() {\n              return toggleSelectUser(user._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Create Group\",\n      onPress: handleCreateGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","ScrollView","Button","SafeAreaView","Alert","CheckBox","useNavigation","jsxDEV","_jsxDEV","CreateGroup","_ref","_this","route","_route$params","params","users","userId","navigation","_useState","_useState2","_slicedToArray","groupName","setGroupName","_useState3","_useState4","selectedUsers","setSelectedUsers","toggleSelectUser","prevSelectedUsers","includes","filter","id","concat","_toConsumableArray","handleCreateGroup","usersWithSelf","alert","length","console","log","requestData","leader","fetch","method","headers","body","JSON","stringify","error","navigate","children","style","justifyContent","alignItems","value","onChangeText","text","fontSize","borderBottomColor","borderBottomWidth","marginVertical","width","height","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","user","flexDirection","_id","onValueChange","email","title","onPress"],"sources":["D:/20045291/CNM/BTL/realtime-chat-app-main/FrontEnd/screens/CreateGroupScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, ScrollView, Button, SafeAreaView, Alert } from \"react-native\";\nimport CheckBox from 'expo-checkbox';\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function CreateGroup({ route }) {\n  const { users,userId } = route.params;\n  \n  const navigation = useNavigation();\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const toggleSelectUser = (userId) => {\n    // Toggle the selection state of the user\n    setSelectedUsers(prevSelectedUsers => {\n      if (prevSelectedUsers.includes(userId)) {\n        // If the user is already selected, remove them from the selectedUsers array\n        return prevSelectedUsers.filter((id) => id !== userId);\n      } else {\n        // If the user is not selected, add them to the selectedUsers array\n        return [...prevSelectedUsers, userId];\n      }\n    });\n  };\n\n  const handleCreateGroup = () => {\n    // gán userId của người tạo gr vào mảng selectedUsers\n    const usersWithSelf = [...selectedUsers, userId];\n\n    // Validate group name and selected users\n    if (!groupName) {\n      Alert.alert(\"Error\",\"Please enter a group name.\");      \n      return;\n    }\n    if (usersWithSelf.length < 2) {\n      \n      Alert.alert(\"Error\",\"You need to select at least two users to create a group.\");      \n      return;\n    }\n\n    // Perform further actions for creating the group\n    console.log(\"Group Name:\", groupName);\n    console.log(\"Selected Users:\", usersWithSelf);\n    \n    \n    const requestData = {\n      groupName: groupName,\n      selectedUsers: usersWithSelf,\n      leader: userId\n    };\n    \n    try {\n      // Post request to server to create a group\n      fetch(\"http://localhost:8000/create-group\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      })\n      //thông báo tạo group thành công. bấm ok mới quay về Home\n      \n      Alert.alert(\"Success\",\"Group created successfully.\");\n    } catch (error) {\n      console.log(\"Error creating group:\", error);\n      // Show error message to user\n      alert(\"Error creating group. Please try again.\");\n    }\n    // Navigate to the group chat screen và truyền danh sách id user đã chọn\n    navigation.navigate(\"Home\");\n\n  };\n\n  return (\n    <SafeAreaView >\n      {/* <Text style={{ fontSize: 18, fontWeight: \"600\", paddingLeft:15, }}>Group Name</Text> */}\n      <View style={{justifyContent:'center', alignItems:'center'}}>\n      <TextInput\n        value={groupName}\n        onChangeText={(text) => setGroupName(text)}\n        style={{\n          fontSize: groupName ? 18 : 18,\n          borderBottomColor: \"gray\",\n          borderBottomWidth: 1,\n          marginVertical: 10,\n          width: \"95%\",\n          height:50,\n          // borderRadius:10,\n        }}\n        placeholder=\"Enter your group name\"\n      />\n      </View>\n      <ScrollView>\n        {users.map((user) => (\n          <View key={user._id} style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <CheckBox\n              value={selectedUsers.includes(user._id)}\n              onValueChange={() => toggleSelectUser(user._id)}\n            />\n            {/* <User item={user} /> */}\n            <Text>{user.email}</Text>\n          </View>\n        ))}\n      </ScrollView>\n      <Button title=\"Create Group\" onPress={handleCreateGroup} />\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}